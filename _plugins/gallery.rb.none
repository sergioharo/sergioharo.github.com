module Jekyll

  class GalleryPost < Post
    def initialize(site, base, dir, category)
      @site = site
      @base = base
      @dir = dir
      @name = 'index.html'

      self.process(@name)
      self.read_yaml(File.join(base, '_layouts'), 'category_index.html')
      self.data['category'] = category

      category_title_prefix = site.config['category_title_prefix'] || 'Category: '
      self.data['title'] = "#{category_title_prefix}#{category}"
    end
  end

  class GalleryPostGenerator < Generator
    safe true
    priority :high

    def generate(site)
      base = File.join(site.source, dir, '_photoPosts')
      return unless File.exists?(base)
      entries = Dir.chdir(base) { filter_entries(Dir['**/*']) }

      # first pass processes, but does not yet render post content
      dir = ''
      entries.each do |f|
        if GalleryPost.valid?(f)
          post = GalleryPost.new(site, site.source, dir, f)

          if post.published && (site.future || post.date <= site.time)
            site.posts << post
            post.categories.each { |c| site.categories[c] << post }
            post.tags.each { |c| site.tags[c] << post }
          end
        end
      end

      site.posts.sort!

      # limit the posts if :limit_posts option is set
      if limit_posts
        limit = site.posts.length < limit_posts ? site.posts.length : limit_posts
        site.posts = site.posts[-limit, limit]
      end
    end
  end

end